---
name: Validate and Release

on:
  push:
    branches:
      - main

jobs:
  validate-commits:
    uses: rusty-apps/workflows/.github/workflows/validate_commits.yml@main

  lint:
    uses: rusty-apps/workflows/.github/workflows/validate_code.yml@main
    with:
      dockerlint: false
      markdownlint: false
      rustlint: true
      workflowlint: true
      yamllint: false

  release:
    needs: [validate-commits, lint]
    runs-on: ubuntu-latest
    name: Tag and Release
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Determine version and create changelog
        id: bumper
        uses: tomerfi/version-bumper-action@1.1.3

      - name: Update Cargo Version
        uses: ciiiii/toml-editor@1.0.0
        with:
          file: "./Cargo.toml"
          key: "package.version"
          value: "${{ steps.bumper.outputs.new_version }}"

      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Lint the dockerfile
        uses: rusty-actions/dockerfile-linter@v1
        with:
          dockerfile: './Dockerfile'

      - name: Build, Tag, Push
        uses: machine-learning-apps/gpr-docker-publish@master
        id: docker
        with:
          IMAGE_NAME: 'slack-message'
          TAG: "${{ steps.bumper.outputs.new_version }}"
          DOCKERFILE_PATH: './Dockerfile'
          BUILD_CONTEXT: './'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Test the action
        env:
          INPUT_MESSAGE: "Build testing slack message"
          INPUT_WEBHOOK: ${{ secrets.SLACK_BUILD_WEBHOOK }}
        id: test
        run: |
          docker run --env INPUT_MESSAGE --env INPUT_WEBHOOK \
            --env GITHUB_REPOSITORY --env GITHUB_EVENT_NAME \
            --env GITHUB_REF --env GITHUB_SHA \
             ghcr.io/rusty-apps/slack-message/slack-message:${{ steps.bumper.outputs.new_version }}

      - name: Create tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.bumper.outputs.new_version }}

      - name: Create Release
        id: create_release
        uses: nickatnight/releases-action@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: main
          tag: ${{ steps.bumper.outputs.new_version }}
